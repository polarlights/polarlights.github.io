<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Exception on Polarlights</title>
    <link>https://polarlights.github.io/tags/exception/</link>
    <description>Recent content in Exception on Polarlights</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 16 Feb 2015 04:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://polarlights.github.io/tags/exception/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>再谈Ruby的异常处理(学习笔记)</title>
      <link>https://polarlights.github.io/post/let-us-talk-about-exception-again/</link>
      <pubDate>Mon, 16 Feb 2015 04:00:00 +0800</pubDate>
      
      <guid>https://polarlights.github.io/post/let-us-talk-about-exception-again/</guid>
      <description>Throw &amp;amp; Catchthrow和catch是Kernel中的方法，它们定义了一种可以从代码块中，穿过多次的代码级数，与catch一同定义的代码块退出的功能。 Throw和Catch与Break的区别：除了都可以从循环中退出外，前者还可以沿着调用栈向上传播，使一个位于调用方法中的代码块退出。 throw和catch与raise和recue还是不同的。前者只是进行退出，却不抛出异常；后者是抛出异常的。它们有着相</description>
    </item>
    
  </channel>
</rss>